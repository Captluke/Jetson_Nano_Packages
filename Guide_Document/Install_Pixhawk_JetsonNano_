# This guideline will show on how to establish connection between Pixhawk and Jetson Nano

# In Pixhawk set the following configurations using Mission Planner:
1. SERIAL2_PROTOCOL = 2 (To enable MAVLINK2 on serial port)
2. SERIAL2_BAUD = 2 (So flight controller can communicate with RPI or Jetson at 921600 Baud Rate)
3. LOG_BACKEND_TYPE = 3 (If APSYNC is used - Normally i'll ignore this)

# Connection Pin Between Jetson Nano & Pixhawk:
Jetson Nano 
(3.3V)         1 : 2  (5V)
(SDA1 I2C)     3 : 4  (5V)
(SCL1 I2C)     5 : 6  (GND)
(AUDIO - MCLK) 7 : 8  (TXD0)
(GND)          9 : 10 (RXD0)

Pixhawk:
Telemetry2 Pin
5V -- Tx -- Rx -- Null -- Null -- GND

Jetson Nano to Pixhawk:
6 (GND)   --> (GND)
8 (TXD0)  --> (Rx)
10 (RXD0) --> (Tx)

# Install Following Packages first in Jetson Nano before installing Drone kit package
$ sudo apt-get update
$ sudo apt-get upgrade
$ sudo apt-get install git cmake
$ sudo apt-get install libatlas-base-dev gfortran
$ sudo apt-get install libhdf5-serial-dev hdf5-tools
$ sudo apt-get install python3-dev
$ sudo apt-get install nano locate
$ sudo apt-get install libfreetype6-dev python3-setuptools
$ sudo apt-get install protobuf-compiler libprotobuf-dev openssl
$ sudo apt-get install libssl-dev libcurl4-openssl-dev
$ sudo apt-get install cython3
$ sudo apt-get install libxml2-dev libxslt1-dev

# Update CMAKE
$ wget http://www.cmake.org/files/v3.13/cmake-3.13.0.tar.gz
$ tar xpvf cmake-3.13.0.tar.gz cmake-3.13.0/
Next, compile CMake:
$ cd cmake-3.13.0/
$ ./bootstrap --system-curl
$ make -j4
And finally, update your bash profile:
$ echo 'export PATH=/home/nvidia/cmake-3.13.0/bin/:$PATH' >> ~/.bashrc
$ source ~/.bashrc

$ sudo apt-get install build-essential pkg-config
$ sudo apt-get install libtbb2 libtbb-dev
$ sudo apt-get install libavcodec-dev libavformat-dev libswscale-dev
$ sudo apt-get install libxvidcore-dev libavresample-dev
$ sudo apt-get install libtiff-dev libjpeg-dev libpng-dev
$ sudo apt-get install python-tk libgtk-3-dev
$ sudo apt-get install libcanberra-gtk-module libcanberra-gtk3-module
$ sudo apt-get install libv4l-dev libdc1394-22-dev

# Install PIP
$ wget https://bootstrap.pypa.io/pip/3.6/get-pip.py
$ sudo python3 get-pip.py
$ rm get-pip.py

# Install Python virtual environment on Jetson Nano
$ sudo pip install virtualenv virtualenvwrapper
$ nano ~/.bashrc

# Add Following Line into ~/.bashrc script. Save and Exit
# virtualenv and virtualenvwrapper
export WORKON_HOME=$HOME/.virtualenvs
export VIRTUALENVWRAPPER_PYTHON=/usr/bin/python3
source /usr/local/bin/virtualenvwrapper.sh
$ source ~/.bashrc

# Create Drone Virtual Environment
Legend : 
mkvirtualenv: Create a Python virtual environment
lsvirtualenv: List virtual environments installed on your system
rmvirtualenv: Remove a virtual environment
workon: Activate a Python virtual environment
deactivate: Exits the virtual environment taking you back to your system environment

$ mkvirtualenv Drone -p python3 (To use default python3)
$ mkvirtualenv Drone -p python3.6 (To use python3.6 only)
$ mkvirtualenv py3cv4 -p python3.9 (To use python3.9 only)

# Install Required Drone kit package
$ sudo apt-get update
$ sudo apt-get upgrade
$ sudo apt-get install python-dev
$ sudo apt-get install future
$ sudo apt-get install screen python-wxgtk4.0 python-lxml
$ sudo pip install pyserial
$ sudo pip install dronekit
$ sudo pip install MAVProxy









